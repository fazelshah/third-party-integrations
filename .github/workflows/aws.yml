name: Deploy Integration to AWS Lambda

on: 
  workflow_dispatch:
    inputs:
      integration_name:
        type: choice
        description: 'Integration Name' 
        required: true
        options:
          - stripe
          - fastspring
      function_name:
        type: choice
        description: 'AWS Lambda Function Name' 
        required: true
        options:
          - stripeIntegrationDev
          - fastspringIntegrationDev
          - fabcadStripeIntegration
          - supmanfastspringInteggration

jobs:
  deploy:
    name: Build and deploy lambda
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: 'main'

      -   name: Setup Node.js
          uses: actions/setup-node@v3
          with:
           node-version: 22.x

      - name: Install dependencies and build
        run: |
          npm ci
          npm run build:${{ github.event.inputs.integration_name }}:aws

      - name: Zip lambda bundle
        uses: montudor/action-zip@v1
        with:
          args: zip -qq -r -j bundle.zip dist

      # ðŸ”¹ Configure AWS credentials from GitHub Secrets
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LAMBDA_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # ðŸ‘ˆ change if needed

      # ðŸ”¹ (Optional) Create IAM role if it doesn't exist
      - name: Ensure IAM Role exists
        run: |
          set -e
          ROLE_NAME="MyLambdaExecutionRole"
          ROLE_ARN=$(aws iam get-role --role-name $ROLE_NAME --query 'Role.Arn' --output text 2>/dev/null || true)
          if [ -z "$ROLE_ARN" ]; then
            echo "Creating IAM Role $ROLE_NAME"
            aws iam create-role \
              --role-name $ROLE_NAME \
              --assume-role-policy-document '{
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": { "Service": "lambda.amazonaws.com" },
                    "Action": "sts:AssumeRole"
                  }
                ]
              }'
            aws iam attach-role-policy \
              --role-name $ROLE_NAME \
              --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
            # sleep to allow IAM role propagation
            sleep 10
          else
            echo "Role $ROLE_NAME already exists: $ROLE_ARN"
          fi

      # ðŸ”¹ Deploy Lambda Function (create if missing, update if exists)
      - name: Deploy lambda
        uses: appleboy/lambda-action@v0.2.0
        with:
          aws_access_key_id: ${{ secrets.AWS_LAMBDA_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_LAMBDA_SECRET_ACCESS_KEY }}
          aws_region: 'us-east-1'
          function_name: ${{ github.event.inputs.function_name }}
          zip_file: bundle.zip
          runtime: nodejs22.x
